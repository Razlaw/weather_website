{"version":3,"sources":["assets/magnifying_glass.svg","components/citySearchBar/CitySearchBar.jsx","components/hourOfDayListItem/HourOfDayListItem.jsx","components/plotForADay/PlotForADay.jsx","components/weatherForecastForADay/WeatherForecastForADay.jsx","components/weatherForecastForAWeek/WeatherForecastForAWeek.jsx","App.jsx","index.js"],"names":["_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMagnifyingGlass","_ref","svgRef","title","titleId","props","id","width","height","viewBox","xmlns","ref","stroke","cx","cy","rx","ry","fill","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","CitySearchBar","cityName","updateCityName","reloadWeather","className","onSubmit","onChange","e","value","placeholder","type","autoFocus","HourOfDayListItem","time","active","PlotForADay","currentHour","weatherData","unit","ResponsiveContainer","BarChart","layout","data","margin","top","left","right","bottom","XAxis","hide","domain","Bar","dataKey","barSize","background","animationDuration","LabelList","position","formatter","entry","toFixed","map","index","Cell","radius","WeatherForecastForADay","dayToDisplay","Date","getHours","useState","currentSlide","setCurrentSlide","temperatures","setTemperatures","React","touchStart","setTouchStart","touchEnd","setTouchEnd","handleTouchEnd","swipeX","swipeY","scrollingToSide","Math","abs","swipeRight","useEffect","roundedTemperatureArray","Array","roundedTemperature","round","push","lowestTemperature","min","temperatureArrayForPlot","temperatureArray","onTouchStart","touchStartEvent","targetTouches","clientX","clientY","onTouchMove","touchMoveEvent","onTouchEnd","onMouseDown","mouseDownEvent","preventDefault","onMouseMove","mouseMoveEvent","console","log","onMouseUp","x","hourOfDay","style","transform","WeatherForecastForAWeek","href","App","useCookies","cookies","setCookie","removeCookie","updateWeatherData","a","fetchWeather","axios","get","process","currentWeather","lat","coord","lon","dt","timezone","nextDaysForecast","path","secure","sameSite","response","error","undefined","scrollingVertically","swipeDown","hourly","slice","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c8be6ea3.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMagnifyingGlass(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"SVGRoot\",\n    width: \"16px\",\n    height: \"16px\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"#000\"\n  }, /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 5.6727,\n    cy: 5.7476,\n    rx: 3.0967,\n    ry: 3.1013,\n    fill: \"none\",\n    strokeLinecap: \"square\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.7101\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9.2387 9.2405 3.7161 3.7215\",\n    fill: \"none\",\n    strokeWidth: 1.6549\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9.2387 10.481-1.2387-2.481 2.4774 1.2405z\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 0.46851\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagnifyingGlass);\nexport default __webpack_public_path__ + \"static/media/magnifying_glass.7b20c50e.svg\";\nexport { ForwardRef as ReactComponent };","import \"./citySearchBar.scss\";\r\nimport {ReactComponent as MagnifyingGlassIcon} from '../../assets/magnifying_glass.svg';\r\n\r\nexport default function CitySearchBar({cityName, updateCityName, reloadWeather}) {\r\n    return (\r\n        <div className=\"citySearchBar\">\r\n            <form onSubmit={reloadWeather}>\r\n                <div className=\"formComponents\">\r\n                    <input\r\n                        onChange={(e) => updateCityName(e.target.value)}\r\n                        placeholder={cityName === \"\" ? \"City\" : cityName}\r\n                        type=\"text\"\r\n                        id=\"cityNameInput\"\r\n                        autoFocus\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <MagnifyingGlassIcon className=\"magnifyingGlassIcon\"/>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import \"./hourOfDayListItem.scss\"\r\n\r\nexport default function HourOfDayListItem({time, active}) {\r\n    return (\r\n        <li\r\n            className={active ? \"hourOfDayListItem active\" : \"hourOfDayListItem\"}\r\n        >\r\n            {time}:00\r\n        </li>\r\n    );\r\n}","import \"./plotForADay.scss\";\r\nimport React from 'react';\r\nimport {\r\n    Cell,\r\n    Bar,\r\n    XAxis,\r\n    BarChart,\r\n    ResponsiveContainer,\r\n    LabelList\r\n} from 'recharts';\r\n\r\nexport default function PlotForADay({currentHour, weatherData, unit}) {\r\n\r\n    const renderLabel = function(entry) {\r\n        return (entry).toFixed(0) + unit;\r\n    }\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart layout=\"vertical\" width=\"100%\" height=\"100%\" data={weatherData} margin={{\r\n                top: 20,\r\n                left: 20,\r\n                right: 20,\r\n                bottom: 0\r\n            }}>\r\n                <XAxis\r\n                    type=\"number\"\r\n                    hide={true}\r\n                    domain={[0, \"dataMax + 1\"]}\r\n                />\r\n                {/*<CartesianGrid*/}\r\n                {/*    strokeDasharray=\"19 6\"*/}\r\n                {/*    strokeDashoffset={10}*/}\r\n                {/*    stroke={'#000'}*/}\r\n                {/*    width={20}*/}\r\n                {/*/>*/}\r\n                <Bar\r\n                    dataKey=\"tempForPlot\"\r\n                    barSize={18}\r\n                    background={{ fill: 'rgb(255,255,255)' }}\r\n                    animationDuration={500}\r\n                >\r\n                    <LabelList\r\n                        dataKey=\"temp\"\r\n                        position=\"right\"\r\n                        formatter={renderLabel}\r\n                    />\r\n                    {weatherData.map((entry, index) => (\r\n                        <Cell\r\n                            className={index === currentHour ? \"barCell active\" : \"barCell\"}\r\n                            fill={index === currentHour ? '#82ca9d' : 'rgb(136,132,216)'}\r\n                            height={18}\r\n                            stroke={'#000'}\r\n                            strokeWidth={0}\r\n                            radius={[0, 5, 5 ,0]}\r\n                            key={`cell-${index}`}\r\n                        />\r\n                    ))}\r\n                </Bar>\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n","import \"./weatherForecastForADay.scss\";\r\nimport HourOfDayListItem from \"../hourOfDayListItem/HourOfDayListItem\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PlotForADay from \"../plotForADay/PlotForADay\";\r\n\r\nexport default function WeatherForecastForADay({dayToDisplay, weatherData}) {\r\n    const today = new Date();\r\n    const currentHour = today.getHours();\r\n\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    const [temperatures, setTemperatures] = useState( [{\"temp\": 0, \"tempForPlot\": 1}]);\r\n\r\n    const [touchStart, setTouchStart] = React.useState([0, 0]);\r\n    const [touchEnd, setTouchEnd] = React.useState([0, 0]);\r\n\r\n    function handleTouchStart(e) {\r\n        setTouchStart([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n        setTouchEnd([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n    }\r\n\r\n    function handleMouseStart(e) {\r\n        e.preventDefault();\r\n        setTouchStart([e.clientX, e.clientY]);\r\n        setTouchEnd([e.clientX, e.clientY]);\r\n    }\r\n\r\n    function handleTouchMove(e) {\r\n        setTouchEnd([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n    }\r\n\r\n    function handleMouseDrag(e) {\r\n        console.log(\"moving mouse or dragging?\");\r\n        setTouchEnd([e.clientX, e.clientY]);\r\n    }\r\n\r\n    function handleTouchEnd() {\r\n        const swipeX = touchStart[0] - touchEnd[0];\r\n        const swipeY = touchStart[1] - touchEnd[1];\r\n        const scrollingToSide = Math.abs(swipeX) > Math.abs(swipeY);\r\n        const swipeLeft = swipeX > 50 && scrollingToSide;\r\n        const swipeRight = swipeX < -50 && scrollingToSide;\r\n\r\n        if (swipeLeft) {\r\n            setCurrentSlide(currentSlide < 3 - 1 ? currentSlide + 1 : 0);\r\n        }\r\n\r\n        if (swipeRight) {\r\n            setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : 3 - 1)\r\n        }\r\n    }\r\n\r\n    // Workaround: recharts draws bars with positive and negative values into different directions.\r\n    //  I didn't find a way to change the behaviour to draw all bars into one direction - setting the bottom\r\n    //  value of the bars as its called in matplotlib. This workaround shifts all values into a range starting\r\n    //  from the value 1 if at least one element is negative. The shifted values as used for plotting while the\r\n    //  original values are used for the labels of the bars.\r\n    useEffect(() => {\r\n        let roundedTemperatureArray = new Array(0);\r\n        for(let i = 0; i < weatherData.length; i++) {\r\n            let roundedTemperature = Math.round(weatherData[i][\"temp\"]);\r\n            roundedTemperatureArray.push(roundedTemperature);\r\n        }\r\n\r\n        let lowestTemperature = Math.min(...roundedTemperatureArray);\r\n        let temperatureArrayForPlot = roundedTemperatureArray.map( function(value) {\r\n            return value - (lowestTemperature - 1);\r\n        } );\r\n\r\n        let temperatureArray = new Array(0);\r\n        for(let i = 0; i < weatherData.length; i++) {\r\n            temperatureArray[i] = {\"temp\": roundedTemperatureArray[i], \"tempForPlot\": temperatureArrayForPlot[i]};\r\n        }\r\n        setTemperatures(temperatureArray);\r\n    }, [weatherData]);\r\n\r\n    return (\r\n        <div\r\n            className=\"weatherForecastForADay\"\r\n            onTouchStart={touchStartEvent => handleTouchStart(touchStartEvent)}\r\n            onTouchMove={touchMoveEvent => handleTouchMove(touchMoveEvent)}\r\n            onTouchEnd={() => handleTouchEnd()}\r\n            onMouseDown={mouseDownEvent => handleMouseStart(mouseDownEvent)}\r\n            onMouseMove={mouseMoveEvent => handleMouseDrag(mouseMoveEvent)}\r\n            onMouseUp={() => handleTouchEnd()}\r\n        >\r\n            <div className=\"contentContainer\">\r\n                <div className=\"dayDisplay\">\r\n                    <h1>\r\n                        {dayToDisplay}\r\n                    </h1>\r\n                </div>\r\n                <div className=\"forecast\">\r\n                    <div className=\"hoursOfDay\">\r\n                        <ul>\r\n                            {[...Array(24)].map((x, hourOfDay) =>\r\n                                <HourOfDayListItem\r\n                                    key={hourOfDay}\r\n                                    time={hourOfDay}\r\n                                    active={currentHour === hourOfDay}\r\n                                />\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"forecastPlot\">\r\n                        <div className=\"plotContainer\">\r\n                            <div className=\"tempPlot\" style={{transform: `rotateY(${currentSlide * 0.25}turn)`}} >\r\n                                <PlotForADay currentHour={currentHour} weatherData={temperatures} unit={\"°C\"}/>\r\n                            </div>\r\n                            <div className=\"windPlot\" style={{transform: `rotateY(${(currentSlide-2) * 0.25}turn)`}}>\r\n                                <PlotForADay currentHour={currentHour} weatherData={temperatures} unit={\"m/s\"}/>\r\n                            </div>\r\n                            <div className=\"rainPlot\" style={{transform: `rotateY(${(currentSlide-1) * 0.25}turn)`}}>\r\n                                <PlotForADay currentHour={currentHour} weatherData={temperatures} unit={\"mm\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./weatherForecastForAWeek.scss\";\r\nimport React from \"react\";\r\n\r\nexport default function WeatherForecastForAWeek({cityName, weatherData}) {\r\n    return (\r\n        <div className=\"weatherForecastForAWeek\">\r\n            <div className=\"contentContainer\">\r\n                <h1>\r\n                    Forecast for a week\r\n                </h1>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <span>\r\n                    The weather data displayed on this website is provided by\r\n                    <a href=\"https://openweathermap.org\"> OpenWeather (TM)</a> under the\r\n                    <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\"> Creative Commons Attribution-ShareAlike 4.0 International licence (CC BY-SA 4.0)</a>.\r\n                    Data and database are open and licensed by <a href=\"https://opendatacommons.org/licenses/odbl/\"> Open Data Commons Open Database License (ODbL)</a>.\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import \"./app.scss\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useCookies} from 'react-cookie';\r\nimport createScrollSnap from 'scroll-snap'\r\nimport CitySearchBar from \"./components/citySearchBar/CitySearchBar\";\r\nimport WeatherForecastForADay from \"./components/weatherForecastForADay/WeatherForecastForADay\";\r\nimport WeatherForecastForAWeek from \"./components/weatherForecastForAWeek/WeatherForecastForAWeek\";\r\nimport {localTimeFromUTCUnix, utcTimeFromUTCUnix} from \"./utils\"\r\n\r\nfunction App() {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    const [touchStart, setTouchStart] = React.useState([0, 0]);\r\n    const [touchEnd, setTouchEnd] = React.useState([0, 0]);\r\n\r\n    function handleTouchStart(e) {\r\n        setTouchStart([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n        setTouchEnd([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n    }\r\n\r\n    function handleTouchMove(e) {\r\n        setTouchEnd([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\r\n    }\r\n\r\n    function handleTouchEnd() {\r\n        const swipeX = touchStart[0] - touchEnd[0];\r\n        const swipeY = touchStart[1] - touchEnd[1];\r\n        const scrollingVertically = Math.abs(swipeX) < Math.abs(swipeY);\r\n        const swipeUp = swipeY > 50 && scrollingVertically;\r\n        const swipeDown = swipeY < -50 && scrollingVertically;\r\n\r\n        if (swipeUp) {\r\n            setCurrentSlide(currentSlide < 2 ? currentSlide + 1 : currentSlide);\r\n        }\r\n\r\n        if (swipeDown) {\r\n            setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : currentSlide)\r\n        }\r\n    }\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['cityName']);\r\n\r\n    const [cityName, updateCityName] = useState(cookies.cityName ? cookies.cityName : \"\");\r\n    const [weatherData, updateWeatherData] = useState();\r\n\r\n    const reloadWeather = async (e) => {\r\n        e.preventDefault();\r\n        await fetchWeather();\r\n    };\r\n\r\n    /* Fetch weather forecast from OpenWeatherMap (OWM)\r\n    *\r\n    * If fetch is successful, the current city name is saved in the cookies, so the user doesn't need to specify\r\n    * it again on reload.\r\n    * Otherwise the city name entry in the cookies is removed and the forecast data is deleted to show the user\r\n    * that the forecast is not available.\r\n    */\r\n    const fetchWeather = async () => {\r\n        try {\r\n            // Since OWM one call api accepts latitude and longitude coordinates only, we first fetch the current\r\n            // weather - containing the coordinates - using the city name and fetch the forecast using the coordinates.\r\n            const currentWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}`);\r\n            const lat = currentWeather.data.coord.lat;\r\n            const lon = currentWeather.data.coord.lon;\r\n            console.log(\"currentWeather\");\r\n            console.log(currentWeather);\r\n            const currentUnixTimeUTC = currentWeather.data.dt;\r\n            const currentUnixTimeLocal = currentWeather.data.dt + currentWeather.data.timezone;\r\n\r\n\r\n            // // Historical Data up to the last full hour starting from 01:00 o'clock - e.g. at 11:08 up to and including 11:00\r\n            // const currentDayForecast = await axios.get(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${currentUnixTimeUTC}&units=metric&appid=${process.env.REACT_APP_API_KEY}`);\r\n            // // currentDayForecast.data.hourly[i].dt\r\n            // console.log(\"currentDayForecast\");\r\n            // console.log(currentDayForecast);\r\n\r\n            const exclude = \"current,minutely,alerts\"\r\n            // Hourly forecast starts at previous full hour - e.g. for 11:08 at 11:00\r\n            const nextDaysForecast = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=${exclude}&appid=${process.env.REACT_APP_API_KEY}`);\r\n            console.log(\"nextDaysForecast\");\r\n            console.log(nextDaysForecast);\r\n\r\n            // for (var i = 0; i < currentDayForecast.data.hourly.length; i++){\r\n            //     const forecastTimeLocal = localTimeFromUTCUnix(currentDayForecast.data.hourly[i].dt);\r\n            //\r\n            //     console.log(\"forecastTimeLocal for historic data\");\r\n            //     console.log(forecastTimeLocal);\r\n            // }\r\n\r\n            // TODO: add utils function to accumulute historical and future data and extract relevant data in\r\n            //  the correct format to display\r\n            setCookie('cityName', cityName, {path: '/', secure: true, sameSite: \"strict\"});\r\n            updateWeatherData(nextDaysForecast.data);\r\n        } catch (error) {\r\n            console.log(\"Failed to fetch weather data\");\r\n            console.log(error.response.data.error);\r\n            removeCookie(\"cityName\", {path: '/', secure: true, sameSite: \"strict\"});\r\n            updateWeatherData();\r\n        }\r\n    };\r\n\r\n    // Fetch weather on first render if city name already defined in cookies\r\n    useEffect(() => {\r\n        if (cookies.cityName) {\r\n            fetchWeather();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"websiteContent\">\r\n                <CitySearchBar cityName={cityName} updateCityName={updateCityName} reloadWeather={reloadWeather}/>\r\n                {weatherData === undefined ? (\r\n                    <div className=\"noData\">\r\n                        <h1>No weather data to display.</h1>\r\n                        <h1>Try another city.</h1>\r\n                    </div>\r\n                ) : (\r\n                    // <div className=\"sections\" ref={myRef}>\r\n                    <div\r\n                        className=\"sections\"\r\n                        onTouchStart={touchStartEvent => handleTouchStart(touchStartEvent)}\r\n                        onTouchMove={touchMoveEvent => handleTouchMove(touchMoveEvent)}\r\n                        onTouchEnd={() => handleTouchEnd()}\r\n                    >\r\n                        <div className=\"container\" style={{transform: `translateY(-${currentSlide * 100}%)`}}>\r\n                            {/*<h1>TEst 1</h1>*/}\r\n                            <WeatherForecastForADay dayToDisplay=\"Today\" weatherData={weatherData.hourly.slice(0, 24)}/>\r\n                        </div>\r\n                        <div className=\"container\" style={{transform: `translateY(${(1 - currentSlide) * 100}%)`}}>\r\n                            {/*<h1>TEst 2</h1>*/}\r\n                            <WeatherForecastForADay dayToDisplay=\"Tomorrow\" weatherData={weatherData.hourly.slice(24, 48)}/>\r\n                        </div>\r\n                        <div className=\"container\" style={{transform: `translateY(${(2 - currentSlide) * 100}%)`}}>\r\n                            {/*<h1>TEst 3</h1>*/}\r\n                            <WeatherForecastForAWeek cityName={cookies.cityName} weatherData={weatherData}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport {CookiesProvider} from 'react-cookie';\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <CookiesProvider>\n        <App/>\n    </CookiesProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}